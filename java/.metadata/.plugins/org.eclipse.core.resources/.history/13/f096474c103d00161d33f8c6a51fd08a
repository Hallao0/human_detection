package imageServer;

import java.awt.image.BufferedImage;
import java.io.BufferedOutputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.nio.ByteBuffer;
import java.nio.file.Files;

import javax.imageio.ImageIO;

public class Main {
	
	public static String serialize(BufferedImage img) {
		String res = "" + img.getWidth() + "\n" + img.getHeight();
		for (int i = 0; i < img.getHeight(); i++) {
			for (int j = 0; j < img.getWidth(); j++) {
				res = res + "\n" + img.getRGB(j, i); 
			}
		}
		return res;
	}
	
	public static void main(String [] args) throws IOException {
		ServerSocket welcomeSocket = new ServerSocket(9999);
        
        Socket connectionSocket = welcomeSocket.accept();
        
        BufferedOutputStream str = new BufferedOutputStream(connectionSocket.getOutputStream());
        
        System.out.println("connection");
        
        
        while (true) {
        	int index = 1;
			try {
				String filename = "/home/v/Desktop/cam/asd" + index + ".png";
				
				File f = new File("/home/v/Desktop/cam/asd" + index + ".png");
				
				BufferedImage img = ImageIO.read(f);
				
				//ByteArrayOutputStream baos = new ByteArrayOutputStream();
				//ImageIO.write( img, "png", baos );
				//baos.flush();
				//byte[] imageInByte = baos.toByteArray();
				//baos.close();
				ByteArrayOutputStream bb = new ByteArrayOutputStream();
				
				for (int i = 0; i < img.getHeight(); i++) {
					String s = "";
					for (int j = 0; j < img.getWidth(); j++) {
						s = s + img.getRGB(j, i) + " ";
					}
					s = s + "\n";
					bb.write(s.getBytes());
				}
				bb.flush();
				
				str.write(bb.toByteArray());
				str.flush();
				
				bb.close();
				
				f.delete();
				index++;
				
				Thread.sleep(5000);
			} catch (IOException | InterruptedException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        }
	
		
	}
}
